# Libraries
library(plyr)
library(dplyr)
library(rvest)
library(stringr)
library(car)
library(caret)
library(scales)

# Inputs
year_list <- c(2010:2022)
lines_list <- c(1:2)

# Yearly Team Stats
# Basic
urls = list()
for (i in 1:length(year_list)) {
  url = paste0('https://www.sports-reference.com/cbb/seasons/', year_list[i],'-school-stats.html')
  urls[[i]] = url
}

tbl = list()
years = year_list[1]
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_node("table") %>%
    html_table()
  tbl[[j]]$Year = years
  years = years+1
}

NCAABasic = plyr::ldply(tbl, data.frame)

NCAABasic = NCAABasic[-1,c(-1,-9,-12,-15,-18,-21,-22)]

names(NCAABasic)[names(NCAABasic) == "Var.2"] <- "School"
names(NCAABasic)[names(NCAABasic) == "Overall"] <- "G"
names(NCAABasic)[names(NCAABasic) == "Overall.1"] <- "W"
names(NCAABasic)[names(NCAABasic) == "Overall.2"] <- "L"
names(NCAABasic)[names(NCAABasic) == "Overall.3"] <- "WinPer"
names(NCAABasic)[names(NCAABasic) == "Overall.4"] <- "SRS"
names(NCAABasic)[names(NCAABasic) == "Overall.5"] <- "SOS"
names(NCAABasic)[names(NCAABasic) == "Conf."] <- "ConW"
names(NCAABasic)[names(NCAABasic) == "Conf..1"] <- "ConL"
names(NCAABasic)[names(NCAABasic) == "Home"] <- "HomeW"
names(NCAABasic)[names(NCAABasic) == "Home.1"] <- "HomeL"
names(NCAABasic)[names(NCAABasic) == "Away"] <- "AwayW"
names(NCAABasic)[names(NCAABasic) == "Away.1"] <- "AwayL"
names(NCAABasic)[names(NCAABasic) == "Points"] <- "TotPTS"
names(NCAABasic)[names(NCAABasic) == "Points.1"] <- "OppPTS"
names(NCAABasic)[names(NCAABasic) == "Totals"] <- "MP"
names(NCAABasic)[names(NCAABasic) == "Totals.1"] <- "FG"
names(NCAABasic)[names(NCAABasic) == "Totals.2"] <- "FGA"
names(NCAABasic)[names(NCAABasic) == "Totals.3"] <- "FGPer"
names(NCAABasic)[names(NCAABasic) == "Totals.4"] <- "X3P"
names(NCAABasic)[names(NCAABasic) == "Totals.5"] <- "X3PA"
names(NCAABasic)[names(NCAABasic) == "Totals.6"] <- "X3Per"
names(NCAABasic)[names(NCAABasic) == "Totals.7"] <- "FT"
names(NCAABasic)[names(NCAABasic) == "Totals.8"] <- "FTA"
names(NCAABasic)[names(NCAABasic) == "Totals.9"] <- "FTPer"
names(NCAABasic)[names(NCAABasic) == "Totals.10"] <- "ORB"
names(NCAABasic)[names(NCAABasic) == "Totals.11"] <- "TRB"
names(NCAABasic)[names(NCAABasic) == "Totals.12"] <- "AST"
names(NCAABasic)[names(NCAABasic) == "Totals.13"] <- "STL"
names(NCAABasic)[names(NCAABasic) == "Totals.14"] <- "BLK"
names(NCAABasic)[names(NCAABasic) == "Totals.15"] <- "TOV"
names(NCAABasic)[names(NCAABasic) == "Totals.16"] <- "PF"

NCAABasic <- NCAABasic[!grepl("School", NCAABasic$School),]
NCAABasic <- NCAABasic[!grepl("Overall", NCAABasic$G),]
NCAABasic$School <- str_remove(NCAABasic$School, "NCAA")
NCAABasic$G[NCAABasic$G==0] <- NA
NCAABasic <- NCAABasic[complete.cases(NCAABasic),]

NCAABasic$Season <- paste(NCAABasic$School, NCAABasic$Year, sep=" ")
NCAABasic = NCAABasic[,c(33,1,32,2:31)]

#Basic Opponent
urls = list()
for (i in 1:length(year_list)) {
  url = paste0('https://www.sports-reference.com/cbb/seasons/', year_list[i],'-opponent-stats.html')
  urls[[i]] = url
}

tbl = list()
years = year_list[1]
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_nodes("table") %>%
    html_table()
  tbl[[j]]$Year = years
  years = years + 1
}

NCAABasicOpp = plyr::ldply(tbl, data.frame)
NCAABasicOpp = NCAABasicOpp[,c(-1,-4:-22)]

names(NCAABasicOpp)[names(NCAABasicOpp) == "Var.2"] <- "School"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Overall"] <- "G"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.1"] <- "OFG"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.2"] <- "OFGA"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.3"] <- "OFGPer"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.4"] <- "O3P"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.5"] <- "O3PA"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.6"] <- "O3Per"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.7"] <- "OFT"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.8"] <- "OFTA"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.9"] <- "OFTPer"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.10"] <- "OORB"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.11"] <- "OTRB"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.12"] <- "OAST"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.13"] <- "OSTL"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.14"] <- "OBLK"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.15"] <- "OTOV"
names(NCAABasicOpp)[names(NCAABasicOpp) == "Opponent.16"] <- "OPF"

NCAABasicOpp <- NCAABasicOpp[!grepl("School", NCAABasicOpp$School),]
NCAABasicOpp <- NCAABasicOpp[!grepl("Overall", NCAABasicOpp$G),]
NCAABasicOpp$School <- str_remove(NCAABasicOpp$School, "NCAA")
NCAABasicOpp$G[NCAABasicOpp$G==0] <- NA
NCAABasicOpp <- NCAABasicOpp[complete.cases(NCAABasicOpp),]
NCAABasicOpp = NCAABasicOpp[,c(-2)]

NCAABasicOpp$Season <- paste(NCAABasicOpp$School, NCAABasicOpp$Year, sep=" ")

NCAABasicOpp = NCAABasicOpp[,c(19,1,18,2:17)]

ncaaB = join(NCAABasic,NCAABasicOpp, by = 'Season', type = 'left', match = 'first')
ncaaB = ncaaB[,c(-34,-35)]

#Scrape Advanced Stats
urls = list()
for (i in 1:length(year_list)) {
  url = paste0('https://www.sports-reference.com/cbb/seasons/', year_list[i],'-advanced-school-stats.html')
  urls[[i]] = url
}

tbl = list()
years = year_list[1]
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_nodes("table") %>%
    html_table()
  tbl[[j]]$Year = years
  years = years + 1
}

NCAAAdv = plyr::ldply(tbl, data.frame)
NCAAAdv = NCAAAdv[,-c(1,4:21)]

names(NCAAAdv)[names(NCAAAdv) == "Var.2"] <- "School"
names(NCAAAdv)[names(NCAAAdv) == "Overall"] <- "G"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced"] <- "Pace"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.1"] <- "ORtg"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.2"] <- "FTr"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.3"] <- "X3PAr"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.4"] <- "TSPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.5"] <- "TRBPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.6"] <- "ASTPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.7"] <- "STLPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.8"] <- "BLKPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.9"] <- "eFGPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.10"] <- "TOVPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.11"] <- "ORBPer"
names(NCAAAdv)[names(NCAAAdv) == "School.Advanced.12"] <- "FT_FGA"

NCAAAdv <- NCAAAdv[!grepl("School", NCAAAdv$School),]
NCAAAdv <- NCAAAdv[!grepl("Overall", NCAAAdv$G),]
NCAAAdv$School <- str_remove(NCAAAdv$School, "NCAA")
NCAAAdv$G[NCAAAdv$G==0] <- NA
NCAAAdv <- NCAAAdv[complete.cases(NCAAAdv),]
NCAAAdv = NCAAAdv[,c(-2)]

NCAAAdv$Season <- paste(NCAAAdv$School, NCAAAdv$Year, sep=" ")
NCAAAdv = NCAAAdv[,c(16,1,15,2:14)]

#Scrape Opp Advanced
urls = list()
for (i in 1:length(year_list)) {
  url = paste0('https://www.sports-reference.com/cbb/seasons/', year_list[i],'-advanced-school-stats.html')
  urls[[i]] = url
}

tbl = list()
years = year_list[1]
j = 1
for (j in seq_along(urls)) {
  tbl[[j]] = urls[[j]] %>%
    read_html() %>%
    html_nodes("table") %>%
    html_table()
  tbl[[j]]$Year = years
  years = years + 1
}

NCAAAdvOpp = plyr::ldply(tbl, data.frame)
NCAAAdvOpp = NCAAAdvOpp[,-c(1,4:21)]

names(NCAAAdvOpp)[names(NCAAAdvOpp) == "Var.2"] <- "School"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "Overall"] <- "G"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced"] <- "O_Pace"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.1"] <- "O_ORtg"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.2"] <- "OFTr"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.3"] <- "O_3PAr"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.4"] <- "O_TSPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.5"] <- "OTRBPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.6"] <- "OASTPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.7"] <- "OSTLPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.8"] <- "OBLKPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.9"] <- "OeFGPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.10"] <- "OTOVPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.11"] <- "O_ORBPer"
names(NCAAAdvOpp)[names(NCAAAdvOpp) == "School.Advanced.12"] <- "OFT_FGA"

NCAAAdvOpp <- NCAAAdvOpp[!grepl("School", NCAAAdvOpp$School),]
NCAAAdvOpp <- NCAAAdvOpp[!grepl("Overall", NCAAAdvOpp$G),]
NCAAAdvOpp$School <- str_remove(NCAAAdvOpp$School, "NCAA")
NCAAAdvOpp$G[NCAAAdvOpp$G==0] <- NA
NCAAAdvOpp <- NCAAAdvOpp[complete.cases(NCAAAdvOpp),]
NCAAAdvOpp = NCAAAdvOpp[,c(-2)]

NCAAAdvOpp$Season <- paste(NCAAAdvOpp$School, NCAAAdvOpp$Year, sep=" ")
NCAAAdvOpp = NCAAAdvOpp[,c(16,1,15,2:14)]

ncaaA = join(NCAAAdv,NCAAAdvOpp, by = 'Season', type = 'left', match = 'first')
ncaaA = ncaaA[,c(-17,-18)]

#Combine Advanced and Basic

ncaa = join(ncaaB,ncaaA, by = 'Season', type = 'left', match = 'first')
ncaa$School <- str_replace_all(ncaa$School, "\\s","")
ncaa$School <- str_replace_all(ncaa$School, "-","")
ncaa$School <- str_replace_all(ncaa$School, "[']","")
ncaa$PPG <- round(as.numeric(ncaa$TotPTS)/as.numeric(ncaa$G), 3)
ncaa$PAPG <- round(as.numeric(ncaa$OppPTS)/as.numeric(ncaa$G), 3)
ncaa$FGPG <- round(as.numeric(ncaa$FG)/as.numeric(ncaa$G), 3)
ncaa$FGAPG <- round(as.numeric(ncaa$FGA)/as.numeric(ncaa$G), 3)
ncaa$X3PG <- round(as.numeric(ncaa$X3P)/as.numeric(ncaa$G), 3)
ncaa$X3APG <- round(as.numeric(ncaa$X3PA)/as.numeric(ncaa$G), 3)
ncaa$FTPG <- round(as.numeric(ncaa$FT)/as.numeric(ncaa$G), 3)
ncaa$FTAPG <- round(as.numeric(ncaa$FTA)/as.numeric(ncaa$G), 3)
ncaa$ORBPG <- round(as.numeric(ncaa$ORB)/as.numeric(ncaa$G), 3)
ncaa$TRBPG <- round(as.numeric(ncaa$TRB)/as.numeric(ncaa$G), 3)
ncaa$ASTPG <- round(as.numeric(ncaa$AST)/as.numeric(ncaa$G), 3)
ncaa$STLPG <- round(as.numeric(ncaa$STL)/as.numeric(ncaa$G), 3)
ncaa$BLKPG <- round(as.numeric(ncaa$BLK)/as.numeric(ncaa$G), 3)
ncaa$TOVPG <- round(as.numeric(ncaa$TOV)/as.numeric(ncaa$G), 3)
ncaa$PFPG <- round(as.numeric(ncaa$PF)/as.numeric(ncaa$G), 3)

ncaa$OFGPG <- round(as.numeric(ncaa$OFG)/as.numeric(ncaa$G), 3)
ncaa$OFGAPG <- round(as.numeric(ncaa$OFGA)/as.numeric(ncaa$G), 3)
ncaa$O3PG <- round(as.numeric(ncaa$O3P)/as.numeric(ncaa$G), 3)
ncaa$O3APG <- round(as.numeric(ncaa$O3PA)/as.numeric(ncaa$G), 3)
ncaa$OFTPG <- round(as.numeric(ncaa$OFT)/as.numeric(ncaa$G), 3)
ncaa$OFTAPG <- round(as.numeric(ncaa$OFTA)/as.numeric(ncaa$G), 3)
ncaa$O_ORBPG <- round(as.numeric(ncaa$OORB)/as.numeric(ncaa$G), 3)
ncaa$O_TRBPG <- round(as.numeric(ncaa$OTRB)/as.numeric(ncaa$G), 3)
ncaa$OASTPG <- round(as.numeric(ncaa$OAST)/as.numeric(ncaa$G), 3)
ncaa$OSTLPG <- round(as.numeric(ncaa$OSTL)/as.numeric(ncaa$G), 3)
ncaa$OBLKPG <- round(as.numeric(ncaa$OBLK)/as.numeric(ncaa$G), 3)
ncaa$OTOVPG <- round(as.numeric(ncaa$OTOV)/as.numeric(ncaa$G), 3)
ncaa$OPFPG <- round(as.numeric(ncaa$OPF)/as.numeric(ncaa$G), 3)

ncaa = ncaa[,c(2:9,78,79,80,81,20,82,83,23,84,85,26,86:92,93,94,36,95,96,39,97,98,42,99:105,52:64,66:77)]
names(ncaa)[names(ncaa) == "School"] <- "Team"
rm(ncaaA,ncaaB,NCAAAdv,NCAAAdvOpp,NCAABasic,NCAABasicOpp,tbl,urls,years,i,j, url,year_list)

# Splitting current year's stats into offensive and defensive sections
ncaa$Team <- str_replace_all(ncaa$Team, "Connecticut", "UConn")
ncaa$Team <- str_replace_all(ncaa$Team, "CentralUConnState", "CentralConnecticutState")
ncaa$Team <- str_replace_all(ncaa$Team, "NevadaLasVegas", "UNLV")
ncaa$Team <- str_replace_all(ncaa$Team, "VirginiaCommonwealth", "VCU")
ncaa$Team <- str_replace_all(ncaa$Team, "LouisianaState", "LSU")
ncaa$Team <- str_replace_all(ncaa$Team, "BrighamYoung", "BYU")

ncaa_yr <- ncaa %>% subset(Year == 2022)

Off_stats <- ncaa_yr[,c("Team","Year","WinPer","SRS","SOS","PPG","FGPG","FGAPG","FGPer","X3PG","X3APG",
                        "X3Per","FTPG","FTAPG","FTPer","ORBPG","TRBPG","ASTPG","TOVPG","PFPG","Pace","ORtg","FTr",
                        "X3PAr","TSPer","TRBPer","ASTPer","eFGPer","TOVPer","ORBPer","FT_FGA")]
Off_stats[,2:31] <- sapply(Off_stats[,2:31],as.numeric)
Def_stats <- ncaa_yr[,c("Team","Year","WinPer","SRS","SOS","PAPG","STLPG","BLKPG","OFGPG","OFGAPG",
                        "OFGPer","O3PG","O3APG","O3Per","OFTPG","OFTAPG","OFTPer","O_ORBPG","O_TRBPG","OASTPG",
                        "OBLKPG","OPFPG","STLPer","BLKPer","Pace","O_ORtg","OFTr","O_3PAr","O_TSPer","OTRBPer",
                        "OASTPer","OeFGPer","O_ORBPer","OFT_FGA")]
Def_stats[,2:34] <- sapply(Def_stats[,2:34],as.numeric)
names(Def_stats)[names(Def_stats) == "WinPer"] <- "OWinPer"
names(Def_stats)[names(Def_stats) == "SRS"] <- "OSRS"
names(Def_stats)[names(Def_stats) == "SOS"] <- "OSOS"
names(Def_stats)[names(Def_stats) == "Team"] <- "Opponent"

# Read Training Dataset
cbb <- read.csv("data/CBB.csv", header = TRUE, sep = ",")
cbb <- cbb[,-1]

set.seed(101)
training.samples <- cbb$Tm %>% createDataPartition(p = 0.8, list = FALSE)
train <- cbb[training.samples,]

final_mod <- lm(Tm~WinPer+SRS+FTAPG+PFPG+Pace+X3PAr+TSPer+TRBPer+TOVPer+OSRS+PAPG+O3PG+O_ORBPG+O_TRBPG+
                  STLPer+BLKPer+O_ORtg+OASTPer+O_ORBPer+OFT_FGA, train)

rm(training.samples, train, cbb)

# Adding in actual Lines
url <- paste0('https://sportsbook.draftkings.com/leagues/basketball/88670771')

#lines_list <- c(1:2)
tbl = list()
for (i in lines_list[1]:length(lines_list)) {
  tbl[[i]] = url %>%
    read_html() %>%
    html_node(xpath = as.character(paste0('//*[@id="root"]/section/section[2]/section/div[3]/div/div[3]/div/div/div[2]/div/div[2]/div[',i,']/table'))) %>%
    html_table()
  names(tbl[[i]])[1] <- "Team"
}

Lines = plyr::ldply(tbl, data.frame)

Lines$Team <- str_replace_all(Lines$Team, "[:digit:]", "")
Lines$Team <- str_replace_all(Lines$Team, "[:]", "")
Lines$Team <- str_replace_all(Lines$Team, "PM", "")
Lines$Team <- str_replace_all(Lines$Team, "AM", "")
Lines$Team <- str_replace_all(Lines$Team, " ", "")

Lines$Spread <- gsub('.{4}$', '', Lines$SPREAD)
Lines$Total <- gsub('.{4}$', '', Lines$TOTAL)
Lines$Total <- gsub('^.{2}', '', Lines$Total)
Lines <- Lines[,c("Team","Spread","Total")]

Lines$Team <- str_replace_all(Lines$Team, "UNI", "NorthernIowa")
Lines$Team <- str_replace_all(Lines$Team, "SMU", "SouthernMethodist")
Lines$Team <- str_replace_all(Lines$Team, "UCF", "CentralFlorida")
Lines$Team <- str_replace_all(Lines$Team, "LongBeachState", "CalStateLongBeach")
Lines$Team <- str_replace_all(Lines$Team, "USC", "SouthernCalifornia")
Lines$Team <- str_replace_all(Lines$Team, "LoyolaMaryland", "Loyola(MD)")
Lines$Team <- str_replace_all(Lines$Team, "LoyolaChicago", "Loyola(IL)")
Lines$Team <- str_replace_all(Lines$Team, "SIUE", "SIUEdwardsville")
Lines$Team <- str_replace_all(Lines$Team, "MississippiValley", "MississippiValleyState")
Lines$Team <- str_replace_all(Lines$Team, "Arkansas-PineBluff", "ArkansasPineBluff")
Lines$Team <- str_replace_all(Lines$Team, "Bethune-Cookman", "BethuneCookman")
Lines$Team <- str_replace_all(Lines$Team, "UMES", "MarylandEasternShore")
Lines$Team <- str_replace_all(Lines$Team, "SaintThomasMN", "St.Thomas(MN)")
Lines$Team <- str_replace_all(Lines$Team, "SaintBonaventure", "St.Bonaventure")
Lines$Team <- str_replace_all(Lines$Team, "BowlingGreen", "BowlingGreenState")
Lines$Team <- str_replace_all(Lines$Team, "MiamiOH", "Miami(OH)")
Lines$Team <- str_replace_all(Lines$Team, "Charleston", "CollegeofCharleston")
Lines$Team <- str_replace_all(Lines$Team, "MiamiFL", "Miami(FL)")
Lines$Team <- str_replace_all(Lines$Team, "CSUBakersfield", "CalStateBakersfield")
Lines$Team <- str_replace_all(Lines$Team, "ArmyWestPoint", "Army")
Lines$Team <- str_replace_all(Lines$Team, "SaintJohns", "St.Johns(NY)")
Lines$Team <- str_replace_all(Lines$Team, "FGCU", "FloridaGulfCoast")
Lines$Team <- str_replace_all(Lines$Team, "ULM", "LouisianaMonroe")
Lines$Team <- str_replace_all(Lines$Team, "CollegeofCharlestonSouthern", "CharlestonSouthern")
Lines$Team <- str_replace_all(Lines$Team, "NorthCarolinaState", "NCState")
Lines$Team <- str_replace_all(Lines$Team, "ETSU", "EastTennesseeState")
Lines$Team <- str_replace_all(Lines$Team, "Gardner-Webb", "GardnerWebb")
Lines$Team <- str_replace_all(Lines$Team, "UMassLowell", "MassachusettsLowell")
Lines$Team <- str_replace_all(Lines$Team, "UMBC", "MarylandBaltimoreCounty")
Lines$Team <- str_replace_all(Lines$Team, "AlbanyNY", "Albany(NY)")
Lines$Team <- str_replace_all(Lines$Team, "OleMiss", "Mississippi")
Lines$Team <- str_replace_all(Lines$Team, "SouthernCaliforniaUpstate", "SouthCarolinaUpstate")
Lines$Team <- str_replace_all(Lines$Team, "FIU", "FloridaInternational")
Lines$Team <- str_replace_all(Lines$Team, "LIU", "LongIslandUniversity")
Lines$Team <- str_replace_all(Lines$Team, "SaintFrancisBrooklyn", "St.Francis(NY)")
Lines$Team <- str_replace_all(Lines$Team, "MountSaintMarys", "MountSt.Marys")
Lines$Team <- str_replace_all(Lines$Team, "SaintFrancisPA", "SaintFrancis(PA)")
Lines$Team <- str_replace_all(Lines$Team, "SamHouston", "SamHoustonState")
Lines$Team <- str_replace_all(Lines$Team, "SFA", "StephenF.Austin")
Lines$Team <- str_replace_all(Lines$Team, "UIC", "IllinoisChicago")
Lines$Team <- str_replace_all(Lines$Team, "UTRGV", "TexasRioGrandeValley")
Lines$Team <- str_replace_all(Lines$Team, "UTMartin", "TennesseeMartin")
Lines$Team <- str_replace_all(Lines$Team, "UIW", "IncarnateWord")
Lines$Team <- str_replace_all(Lines$Team, "A&M-CorpusChristi", "TexasA&MCorpusChristi")
Lines$Team <- str_replace_all(Lines$Team, "SaintMarys", "SaintMarys(CA)")
Lines$Team <- str_replace_all(Lines$Team, "LMU", "LoyolaMarymount")
Lines$Team <- str_replace_all(Lines$Team, "CSUN", "CalStateNorthridge")
Lines$Team <- str_replace_all(Lines$Team, "UNCW", "UNCWilmington")
Lines$Team <- str_replace_all(Lines$Team, "McNeese", "McNeeseState")
Lines$Team <- str_replace_all(Lines$Team, "Louisiana-Lafayette", "Louisiana")

for (i in 1:length(Lines$Team)) {
  Lines$Opponent[i] <- ifelse(i %% 2 == 0, Lines$Team[i-1],Lines$Team[i+1])
}
Lines <- Lines[,c("Team","Opponent","Spread","Total")]

Current_Wk <- join(Lines, Off_stats, by = 'Team', type = 'left', match = 'first')
Current_Wk <- join(Current_Wk, Def_stats, by = 'Opponent', type = 'left', match = 'first')
Current_Wk <- Current_Wk[complete.cases(Current_Wk),]
Current_Wk$Pts <- round(predict(final_mod, Current_Wk),2)
Current_Wk <- Current_Wk[,c("Team","Opponent","Year","Pts","Spread","Total")]
for (i in 1:length(Current_Wk$Team)) {
  for (j in 1:length(Current_Wk$Opponent)) {
    Current_Wk$OppPts[i] <- ifelse(Current_Wk$Team[i] == Current_Wk$Opponent[j],Current_Wk$Pts[j],"")
    ifelse(Current_Wk$OppPts[i] == Current_Wk$Pts[j], break, next)
  }
}
Current_Wk$OppPts <- as.numeric(Current_Wk$OppPts)
for (i in 1:length(Current_Wk$Team)) {
  Current_Wk$Winner[i] <- ifelse(Current_Wk$Pts[i] > Current_Wk$OppPts[i],Current_Wk$Team[i],Current_Wk$Opponent[i])
  Current_Wk$ProjSpread[i] <- ifelse(Current_Wk$Winner[i] == Current_Wk$Team[i], round(Current_Wk$Pts[i] - Current_Wk$OppPts[i],2), round(Current_Wk$OppPts[i] - Current_Wk$Pts[i],2))
  Current_Wk$ProjTotal[i] <- Current_Wk$Pts[i] + Current_Wk$OppPts[i]
  monte_carlo <- data.frame(simulation = seq(1:10000))
  monte_carlo$Team1 <- qnorm(runif(10000),mean = Current_Wk$Pts[i],sd = 9.715)
  monte_carlo$Team2 <- qnorm(runif(10000),mean = Current_Wk$OppPts[i],sd = 9.715)
  monte_carlo$Team1Wins <- ifelse(monte_carlo$Team1>monte_carlo$Team2,1,0)
  Current_Wk$WinProb[i] <- sum(monte_carlo$Team1Wins)/length(monte_carlo$Team1Wins)
  Current_Wk$OppWinProb[i] <- 1 - Current_Wk$WinProb[i]
  Current_Wk$WinProbability[i] <- percent(ifelse(Current_Wk$Winner[i] == Current_Wk$Team[i], Current_Wk$WinProb[i], Current_Wk$OppWinProb[i]), accuracy = 0.01)
}
Current_Wk <- Current_Wk %>% subset(Team == Winner)
Current_Wk <- Current_Wk[,c("Winner","Opponent","Year","WinProbability","Pts","OppPts","ProjSpread","Spread","ProjTotal","Total")]

rm(i,j,Off_stats,Def_stats, url, tbl, monte_carlo, lines_list)

matchup_proj <- function(pick) {
  ncaa_proj <- pick
  Off_stats <- ncaa_proj[,c("Team","Year","WinPer","SRS","SOS","PPG","FGPG","FGAPG","FGPer","X3PG","X3APG",
                            "X3Per","FTPG","FTAPG","FTPer","ORBPG","TRBPG","ASTPG","TOVPG","PFPG","Pace","ORtg","FTr",
                            "X3PAr","TSPer","TRBPer","ASTPer","eFGPer","TOVPer","ORBPer","FT_FGA")]
  Off_stats[,2:31] <- sapply(Off_stats[,2:31],as.numeric)
  Def_stats <- ncaa_proj[,c("Team","Year","WinPer","SRS","SOS","PAPG","STLPG","BLKPG","OFGPG","OFGAPG",
                            "OFGPer","O3PG","O3APG","O3Per","OFTPG","OFTAPG","OFTPer","O_ORBPG","O_TRBPG","OASTPG",
                            "OBLKPG","OPFPG","STLPer","BLKPer","Pace","O_ORtg","OFTr","O_3PAr","O_TSPer","OTRBPer",
                            "OASTPer","OeFGPer","O_ORBPer","OFT_FGA")]
  Def_stats[,2:34] <- sapply(Def_stats[,2:34],as.numeric)
  names(Def_stats)[names(Def_stats) == "WinPer"] <- "OWinPer"
  names(Def_stats)[names(Def_stats) == "SRS"] <- "OSRS"
  names(Def_stats)[names(Def_stats) == "SOS"] <- "OSOS"
  names(Def_stats)[names(Def_stats) == "Team"] <- "Opponent"
  names(Def_stats)[names(Def_stats) == "Year"] <- "OppYear"
  ncaa_proj <- ncaa_proj %>% select("Team","Year")
  for (i in 1:length(ncaa_proj$Team)) {
    ncaa_proj$Opponent[i] <- ifelse(i %% 2 == 0, ncaa_proj$Team[1],ncaa_proj$Team[2])
    ncaa_proj$OppYear[i] <- ifelse(i %% 2 == 0, ncaa_proj$Year[1],ncaa_proj$Year[2])
  }
  ncaa_proj <- join(ncaa_proj, Off_stats, by = c('Team','Year'), type = 'left', match = 'first')
  ncaa_proj <- join(ncaa_proj, Def_stats, by = c('Opponent','OppYear'), type = 'left', match = 'first')
  ncaa_proj$Pts <- round(predict(final_mod, ncaa_proj),2)
  for (i in 1:length(ncaa_proj$Team)) {
    for (j in 1:length(ncaa_proj$Opponent)) {
      ncaa_proj$OppPts[i] <- ifelse(ncaa_proj$Team[i] == ncaa_proj$Opponent[j] & 
                                      ncaa_proj$Year[i] == ncaa_proj$OppYear[j] ,ncaa_proj$Pts[j],"")
      ifelse(ncaa_proj$OppPts[i] == ncaa_proj$Pts[j], break, next)
    }
  }
  ncaa_proj <- ncaa_proj[1,]
  ncaa_proj$OppPts <- as.numeric(ncaa_proj$OppPts)
  ncaa_proj$ProjTotal <- round(ncaa_proj$Pts+ncaa_proj$OppPts,2)
  monte_carlo <- data.frame(simulation = seq(1:10000))
  monte_carlo$Team1 <- qnorm(runif(10000),mean = ncaa_proj$Pts,sd = 9.715)
  monte_carlo$Team2 <- qnorm(runif(10000),mean = ncaa_proj$OppPts,sd = 9.715)
  monte_carlo$Team1Wins <- ifelse(monte_carlo$Team1>monte_carlo$Team2,1,0)
  ncaa_proj$WinProb <- sum(monte_carlo$Team1Wins)/length(monte_carlo$Team1Wins)
  ncaa_proj$OppWinProb <- 1 - ncaa_proj$WinProb
  ncaa_proj$Winner <- ifelse(ncaa_proj$WinProb > 0.5, 
                             paste(ncaa_proj$Year,ncaa_proj$Team, sep = " "), 
                             paste(ncaa_proj$OppYear,ncaa_proj$Opponent, sep = " "))
  ncaa_proj$WinProbability <- percent(ifelse(ncaa_proj$WinProb > 0.5, ncaa_proj$WinProb, ncaa_proj$OppWinProb), accuracy = 0.01)
  ncaa_proj$ProjScore <- ifelse(ncaa_proj$WinProb > 0.5, 
                                paste(ncaa_proj$Pts,ncaa_proj$OppPts, sep = "-"), 
                                paste(ncaa_proj$OppPts,ncaa_proj$Pts, sep = "-"))
  ncaa_proj$ProjSpread <- ifelse(ncaa_proj$WinProb > 0.5, 
                                 round(ncaa_proj$Pts - ncaa_proj$OppPts,2), 
                                 round(ncaa_proj$OppPts - ncaa_proj$Pts,2))
  ncaa_proj <- ncaa_proj %>% dplyr::select("Winner","WinProbability", "ProjScore","ProjSpread","ProjTotal")
  return(ncaa_proj)
  rm(Off_stats, Def_stats, i)
}
